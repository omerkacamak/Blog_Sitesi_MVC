@using Datam.Models
@model Writer
@{
    // ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/blogLayout.cshtml";
}




@*<h1>--> @User.Identity.Name  --- @User.Claims.FirstOrDefault(g => g.Type == "writerid")?.Value</h1>*@



<section class="h-100 gradient-custom-2">
    <div class="contaixner  h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col ">
                <div class="card">
                    <div class="rounded-top text-white d-flex flex-row" style="background-color: #000; height:200px;">
                        <div class="ms-4 mt-5 d-flex flex-column" style="width: 150px;">
                            <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-profiles/avatar-1.webp"
                                 alt="Generic placeholder image" class="img-fluid img-thumbnail mt-4 mb-2"
                                 style="width: 150px; z-index: 1">
                            <a onclick="EditRefresh()" type="button" class="btn btn-outline-dark" data-mdb-ripple-color="dark"
                                    style="z-index: 1;" >
                                Düzenle 
                            </a>
                            
                        </div>
                        <div class="ms-3" style="margin-top: 130px;">
                            <h5><b>@Model.WriterName.ToUpper() </b>
                            @if(Model.RoleId==1)
                                {
                                    <span>(Yazar)</span>
                                }
                                else if (Model.RoleId==2)
                                {
                                    <span>(Normal)</span>
                                }
                            </h5>
                            <p>@Model.WriterAbout</p>
                        </div>
                    </div>
                    <div class="p-4 text-black" style="background-color: #f8f9fa;">
                         <div class="d-flex justify-content-end text-center py-1">
                            <div>
                                <p class="mb-1 h5">@Model.Blogs.Count</p>
                                <a type="button" onclick="blog()" class="small text-muted mb-0">Bloglar</a>
                            </div>
                            <div id="s" class="px-3">
                                <p class="mb-1 h5">
                                   @Model.Follower.Count
                                </p>
                                <a type="button" onclick="takipci()" class="small text-muted mb-0">Takipçi</a>
                            </div>
                            <div>
                                <p class="mb-1 h5">@Model.Following.Count</p>
                                <a type="button" onclick="following()" class="small text-muted mb-0">Takip Edilen</a>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</section>





<div id="component">


    @await Component.InvokeAsync("WritersBlog", new { id = Model.WriterID })
</div>



@section scripts
{
    <script>
        function Refresh() {
            $.ajax({
                type: "GET",
                url: "/Writer/Other/RefreshViewComponent",
                success: function (data) {
                    document.getElementById("component").innerHTML = data;
                }
            });
        }
         function EditRefresh() {
            $.ajax({
                type: "GET",
                url: "/Writer/Other/EditProRef/@Model.WriterID",
                success: function (data) {
                    document.getElementById("component").innerHTML = data;
                }
            });
            
        }
         function takipci() {
            $.ajax({
                type: "GET",
                url: "/Writer/Other/FollowerRefresh/@Model.WriterID",
                success: function (data) {
                    document.getElementById("component").innerHTML = data;
                }
            });
        }
        function following() {
            $.ajax({
                type: "GET",
                url: "/Writer/Other/FollowingRefresh/@Model.WriterID",
                success: function (data) {
                    document.getElementById("component").innerHTML = data;
                }
            });
        }
        function blog() {
            $.ajax({
                type: "GET",
                url: "/Writer/Other/BlogRefresh/@Model.WriterID",
                success: function (data) {
                    document.getElementById("component").innerHTML = data;
                }
            });
        }
    </script>
}
